stages:
  - deploy

deploy_to_repository:
  stage: deploy
  only:
    - main
  script: |
    Get-PSRepository | ft Name,SourceLocation
    $LOCATION = Get-Location
    $ImportedModules = "$LOCATION\Modules" | Get-ChildItem -Directory | % {Get-ChildItem -Path $_.FullName -Filter '*.psd1'} | % {Import-Module $_.FullName -Prefix 'zzz' -DisableNameChecking -PassThru -Force}
    $PublishedModules = $ImportedModules | % {Find-Module -Repository $PSRepositoryName -Name $_.Name -ErrorAction SilentlyContinue} | % -Begin {$h=@{}} -Process {$h[$_.Name] = $_.Version} -End {$h}
    $diff = $ImportedModules | Select-Object -Property Name,Version,@{n='PublishedVersion';e={if($PublishedModules.ContainsKey($_.Name)){$PublishedModules[$_.Name]}else{[System.Version]::new()}}},ModuleBase
    $ShowDiff = $diff | Select-Object Name,Version,PublishedVersion | Format-Table -AutoSize | Out-String
    'diff modules'
    $ShowDiff
    $ToPublish = $diff | ? {$_.Version -gt $_.PublishedVersion}
    # if ($ToPublish) {$ToPublish | % {Publish-Module -Path $_.ModuleBase -NuGetApiKey $NuGetApiKey -Repository $PSRepositoryName}} else {throw "No recent versions of the modules were found $ShowDiff"}

    $Scripts = Get-ChildItem -Path "$LOCATION\Scripts\*.ps1"
    $Scripts | Select-Object -Property @(
      ,@{n='Script';e={$_.BaseName}}
      ,@{n='_Publish';e={$r=@{success=$true;error=''};try{$_ = Publish-Script -Path $_.FullName -NuGetApiKey $NuGetApiKey -Repository $PSRepositoryName}catch{$r['success']=$false;$r['error']=$_.Exception.Message}finally{$r}}}
    ) | Select-Object -Property @(
      ,'Script'
      ,@{n='Published';e={$_._Publish.success}}
      ,@{n='Error';e={$_._Publish.error}}
    )
  tags: 
    - APP
